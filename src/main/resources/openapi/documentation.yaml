openapi: "3.0.3"
info:
  title: "Collect_Invest_API_Service API"
  description: "Collect_Invest_API_Service API"
  version: "1.0.0"
servers:
- url: "https://localhost:1111"
paths:
  /financialService/buy/{userId}/{amount}:
    post:
      description: ""
      parameters:
      - name: "userId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "amount"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Status"
        "503":
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                type: "string"
  /financialService/getWallet/{userId}:
    get:
      description: ""
      parameters:
      - name: "userId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Wallet"
        "503":
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                type: "string"
  /financialService/sell/{userId}/{amount}:
    post:
      description: ""
      parameters:
      - name: "userId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "amount"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Status"
        "503":
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                type: "string"
  /financialService/topUp/{userId}/{amount}:
    put:
      description: ""
      parameters:
      - name: "userId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "amount"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: "string"
  /userService/logIn/{email}/{password}:
    get:
      description: ""
      parameters:
      - name: "email"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "password"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Message"
              examples:
                Example#1:
                  description: ""
                  value:
                    message: "Authorised"
        "503":
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                type: "string"
  /userService/signUp:
    post:
      description: ""
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Message"
              examples:
                Example#1:
                  description: ""
                  value:
                    message: "Authorised"
        "503":
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                type: "string"
components:
  schemas:
    Status:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        status:
          type: "string"
      required:
      - "status"
    Wallet:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        userId:
          type: "integer"
          format: "int64"
        balance:
          type: "integer"
          format: "int32"
        status:
          type: "string"
      required:
      - "status"
    Message:
      type: "object"
      properties:
        message:
          type: "string"
      required:
      - "message"
    User:
      type: "object"
      properties:
        name:
          type: "string"
        email:
          type: "string"
        password:
          type: "string"
      required:
      - "name"
      - "email"
      - "password"